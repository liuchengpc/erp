<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apatech.mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="com.apatech.domain.Member">
    <id column="memberID" jdbcType="INTEGER" property="memberid" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="memberLvID" jdbcType="INTEGER" property="memberlvid" />
    <result column="passWord" jdbcType="VARCHAR" property="password" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="street" jdbcType="VARCHAR" property="street" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <!-- <result column="memberlvname" jdbcType="VARCHAR" property="memberlvname" />
    <result column="hycount" jdbcType="INTEGER" property="hycount" />
    <result column="hysumprice" jdbcType="INTEGER" property="hysumprice" />
    <result column="hytime" jdbcType="DATE" property="hytime" /> -->
  </resultMap>
  <sql id="Base_Column_List">
    memberID, phone, name, memberLvID, passWord, province, city, region, street, price, 
    integral
  </sql>
  <select id="queryMemberByPhoneTwo" parameterType="com.apatech.domain.Member" resultMap="BaseResultMap">
  	select * from member where phone = #{phone,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="queryMemberByPhone" parameterType="com.apatech.domain.Member" resultMap="BaseResultMap">
  	select * from member where phone = #{phone,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR} 
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where memberID = #{memberid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member
    where memberID = #{memberid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.apatech.domain.Member">
    insert into member (memberID, phone, name, 
      memberLvID, passWord, province, 
      city, region, street, 
      price, integral)
    values (#{memberid,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{memberlvid,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{street,jdbcType=VARCHAR}, 
      #{price,jdbcType=REAL}, #{integral,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.apatech.domain.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberid != null">
        memberID,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="memberlvid != null">
        memberLvID,
      </if>
      <if test="password != null">
        passWord,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="street != null">
        street,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="integral != null">
        integral,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberid != null">
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="memberlvid != null">
        #{memberlvid,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="street != null">
        #{street,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.apatech.domain.Member">
    update member
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="memberlvid != null">
        memberLvID = #{memberlvid,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        passWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="street != null">
        street = #{street,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
    </set>
    where memberID = #{memberid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.apatech.domain.Member">
    update member
    set phone = #{phone,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      memberLvID = #{memberlvid,jdbcType=INTEGER},
      passWord = #{password,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      street = #{street,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      integral = #{integral,jdbcType=INTEGER}
    where memberID = #{memberid,jdbcType=INTEGER}
  </update>
  
  
  <select id="queryAllBy" resultType="com.apatech.domain.Member">
  	SELECT d.*,(SELECT name FROM memberlv l WHERE l.memberLvID=d.memberLvID) memberlvname, (SELECT COUNT(*) FROM cashregister e WHERE e.memberID = d.memberID  ) hycount, IFNULL( ( SELECT SUM(moneyamt) FROM cashregister f WHERE f.memberID = d.memberID ) ,0)  hysumprice, (SELECT time FROM cashregister g WHERE g.memberID = d.memberID GROUP BY g.time LIMIT 1,1) hytime FROM member d
  	<trim prefix="where" prefixOverrides="and|or">
		<if test="null!=phoneorname and ''!=phoneorname">
		and (d.phone like "%"#{phoneorname,jdbcType=VARCHAR}"%" or d.name like "%"#{phoneorname,jdbcType=VARCHAR}"%")
		</if>
		<if test="0!=lvid">
		and d.memberLvID=#{lvid,jdbcType=INTEGER}
		</if>
	</trim>
  	
  </select>
  <select id="queryAllByPhone" resultType="com.apatech.domain.Member">
  	SELECT d.*,(SELECT name FROM memberlv l WHERE l.memberLvID=d.memberLvID) memberlvname, (SELECT COUNT(*) FROM cashregister e WHERE e.memberID = d.memberID  ) hycount, IFNULL( ( SELECT SUM(moneyamt) FROM cashregister f WHERE f.memberID = d.memberID ) ,0)  hysumprice, (SELECT time FROM cashregister g WHERE g.memberID = d.memberID GROUP BY g.time LIMIT 1,1) hytime FROM member d
	where d.phone =#{phone,jdbcType=VARCHAR}
  	
  </select>
  
  
  <select id="selectByMemberLvid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where memberLvID = #{memberLvID,jdbcType=INTEGER}
  </select>
</mapper>